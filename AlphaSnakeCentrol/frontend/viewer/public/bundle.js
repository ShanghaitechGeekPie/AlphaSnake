!function(Q){var F={};function U(B){if(F[B])return F[B].exports;var t=F[B]={i:B,l:!1,exports:{}};return Q[B].call(t.exports,t,t.exports,U),t.l=!0,t.exports}U.m=Q,U.c=F,U.d=function(Q,F,B){U.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:B})},U.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},U.t=function(Q,F){if(1&F&&(Q=U(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(U.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var t in Q)U.d(B,t,function(F){return Q[F]}.bind(null,t));return B},U.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return U.d(F,"a",F),F},U.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},U.p="",U(U.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/common.js\nconst PLAYER_COUNT = 12;\nconst COLOR_LIST = ["#990000", "#CC3300", "#CC6600", "#CC0033", "#FFFF00", "#33FF00", "#33CC00", "#0066FF", "#00FF99", "#770099"];\n\nconst ROW = 100;\nconst COL = 100;\n\nconst BLOCK_WIDTH = 8;\nconst BLOCK_HEIGHT = 8;\n// CONCATENATED MODULE: ./src/GameRenderer.js\n\n\nconst ELEMENT_NONE = "none";\nconst ELEMENT_FOOD = "food";\nconst ELEMENT_WALL = "wall";\nconst ELEMENT_HEAD = "head";\nconst ELEMENT_BODY = "body";\n\nclass GameRenderer_GameRenderer {\n\tconstructor(ctx, w, h) {\n\t\tGameRenderer_GameRenderer.Instance = this;\n\n\t\tthis.ctx = ctx;\n\t\tthis.width = w;\n\t\tthis.height = h;\n\n\t\tthis.viewport = { x: 0, y: 0 };\n\t\tthis.movDirX = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_NONE;\n\t\tthis.movDirY = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_NONE;\n\n\t\tthis.boardData = [];\n\t}\n\n\tupdateBoardData(d) {\n\t\tthis.boardData = d;\n\t}\n\n\tupdate() {\n\t\tthis.adjustViewport();\n\n\t\tthis.ctx.save();\n\n\t\tthis.ctx.translate(-this.viewport.x, -this.viewport.y);\n\n\t\tthis.ctx.clearRect(0, 0, this.width, this.height);\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.fillStyle = "#000000";\n\t\tthis.ctx.fillRect(0, 0, BLOCK_WIDTH * COL, BLOCK_HEIGHT * ROW);\n\n\t\tfor (let i = 0; i < ROW * COL; i++) {\n\t\t\tlet v = this.boardData[i];\n\t\t\tlet t = ELEMENT_NONE;\n\n\t\t\tif (v == -1) {\n\t\t\t\t// food\n\t\t\t\tt = ELEMENT_FOOD;\n\t\t\t} else if (v == -3) {\n\t\t\t\t// wall\n\t\t\t\tt = ELEMENT_WALL;\n\t\t\t} else if (v > 0 && v % 2 == 0) {\n\t\t\t\t// head\n\t\t\t\tt = ELEMENT_HEAD;\n\t\t\t} else if (v > 0 && v % 2 == 1) {\n\t\t\t\t// body\n\t\t\t\tt = ELEMENT_BODY;\n\t\t\t}\n\n\t\t\tif (t != ELEMENT_NONE) {\n\t\t\t\tthis.drawElement(t, i, v);\n\t\t\t}\n\t\t}\n\n\t\tthis.ctx.restore();\n\t}\n\n\tadjustViewport() {\n\t\tconst movSpeed = 3;\n\t\tconst minX = 0,\n\t\t      maxX = -this.width + COL * BLOCK_WIDTH;\n\t\tconst minY = 0,\n\t\t      maxY = -this.height + ROW * BLOCK_HEIGHT;\n\n\t\tif (this.movDirX == GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_LEFT) {\n\t\t\tthis.viewport.x -= movSpeed;\n\t\t} else if (this.movDirX == GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_RIGHT) {\n\t\t\tthis.viewport.x += movSpeed;\n\t\t}\n\n\t\tif (this.movDirY == GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_TOP) {\n\t\t\tthis.viewport.y -= movSpeed;\n\t\t} else if (this.movDirY == GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_BOTTOM) {\n\t\t\tthis.viewport.y += movSpeed;\n\t\t}\n\n\t\tif (this.viewport.x < minX) {\n\t\t\tthis.viewport.x = minX;\n\t\t} else if (this.viewport.x > maxX) {\n\t\t\tthis.viewport.x = maxX;\n\t\t}\n\n\t\tif (this.viewport.y < minY) {\n\t\t\tthis.viewport.y = minY;\n\t\t} else if (this.viewport.y > maxY) {\n\t\t\tthis.viewport.y = maxY;\n\t\t}\n\t}\n\n\tdrawElement(type, i, v) {\n\t\tlet col = i % COL,\n\t\t    row = (i - col) / COL;\n\n\t\tthis.ctx.save();\n\n\t\tthis.ctx.translate(col * BLOCK_WIDTH, row * BLOCK_HEIGHT);\n\n\t\tthis.ctx.beginPath();\n\n\t\tif (type == ELEMENT_HEAD) {\n\t\t\tthis.ctx.strokeStyle = "#FFFFFF";\n\t\t\tthis.ctx.fillStyle = COLOR_LIST[v / 2];\n\t\t\tthis.ctx.lineWidth = 2;\n\n\t\t\tthis.ctx.rect(0, 0, BLOCK_WIDTH, BLOCK_HEIGHT);\n\t\t\tthis.ctx.arc(BLOCK_WIDTH / 2, BLOCK_HEIGHT / 2, BLOCK_WIDTH / 4, 0, Math.PI);\n\t\t\tthis.ctx.fill();\n\t\t\tthis.ctx.stroke();\n\t\t} else if (type == ELEMENT_BODY) {\n\t\t\tthis.ctx.strokeStyle = "#FFFFFF";\n\t\t\tthis.ctx.fillStyle = COLOR_LIST[(v + 1) / 2];\n\t\t\tthis.ctx.lineWidth = 2;\n\n\t\t\tthis.ctx.rect(0, 0, BLOCK_WIDTH, BLOCK_HEIGHT);\n\t\t\tthis.ctx.fill();\n\t\t\tthis.ctx.stroke();\n\t\t} else if (type == ELEMENT_WALL) {\n\t\t\tthis.ctx.fillStyle = "#3F3F3F";\n\n\t\t\tthis.ctx.rect(0, 0, BLOCK_WIDTH, BLOCK_HEIGHT);\n\t\t\tthis.ctx.fill();\n\t\t}\n\n\t\tthis.ctx.restore();\n\t}\n}\n\nGameRenderer_GameRenderer.Instance = null;\n\nGameRenderer_GameRenderer.VIEWPORT_MOV_DIR_NONE = -1;\nGameRenderer_GameRenderer.VIEWPORT_MOV_DIR_LEFT = 0;\nGameRenderer_GameRenderer.VIEWPORT_MOV_DIR_RIGHT = 1;\nGameRenderer_GameRenderer.VIEWPORT_MOV_DIR_TOP = 2;\nGameRenderer_GameRenderer.VIEWPORT_MOV_DIR_BOTTOM = 3;\n// CONCATENATED MODULE: ./src/test/SnakeTest.js\n\n\nclass SnakeTest_SnakeTest {\n\tconstructor() {\n\t\tSnakeTest_SnakeTest.Instance = this;\n\n\t\tthis.snakeList = [];\n\t\tthis.map = [];\n\n\t\tthis.lag = 15;\n\t\tthis.lagTick = 0;\n\t}\n\n\tinitMap() {\n\t\tthis.map.splice(0, this.map.length);\n\n\t\tfor (let i = 0; i < ROW * COL; i++) {\n\t\t\tthis.map.push(0);\n\t\t}\n\t}\n\n\taddSnake() {\n\t\tlet s = new SnakeTest_Snake();\n\t\tthis.snakeList.push(s);\n\t}\n\n\trun() {\n\t\tif (this.lagTick++ < this.lag) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lagTick = 0;\n\n\t\tthis.initMap();\n\n\t\tfor (let i = 0; i < this.snakeList.length; i++) {\n\t\t\tlet snake = this.snakeList[i];\n\t\t\tsnake.run();\n\t\t\tsnake.putOnMap(this.map);\n\t\t}\n\t}\n}\n\nSnakeTest_SnakeTest.Instance = null;\n\nclass SnakeTest_Snake {\n\tconstructor() {\n\t\tthis.id = ++SnakeTest_Snake.SNAKE_ID;\n\n\t\tthis.list = [];\n\n\t\tthis.initSnake();\n\t}\n\n\tinitSnake() {\n\t\tlet randomX = Math.floor(Math.random() * 100),\n\t\t    randomY = Math.floor(Math.random() * 99) + 1;\n\n\t\tthis.list.push([randomX, randomY]);\n\t\tthis.list.push([randomX, randomY - 1]);\n\t}\n\n\tputOnMap(map) {\n\t\tfor (let i = 0; i < this.list.length; i++) {\n\t\t\tconst node = this.list[i],\n\t\t\t      v = node[0] + node[1] * COL;\n\n\t\t\tif (i == 0) {\n\t\t\t\tmap[v] = this.id * 2;\n\t\t\t} else {\n\t\t\t\tmap[v] = this.id * 2 - 1;\n\t\t\t}\n\t\t}\n\t}\n\n\trun() {\n\t\tconst dir = Math.floor(Math.random() * 4);\n\t\tconst head = this.list[0];\n\n\t\tif (dir == 0) {\n\t\t\tthis.list.splice(0, 0, [head[0] - 1, head[1]]);\n\t\t} else if (dir == 1) {\n\t\t\tthis.list.splice(0, 0, [head[0] + 1, head[1]]);\n\t\t} else if (dir == 2) {\n\t\t\tthis.list.splice(0, 0, [head[0], head[1] - 1]);\n\t\t} else if (dir == 3) {\n\t\t\tthis.list.splice(0, 0, [head[0], head[1] + 1]);\n\t\t}\n\n\t\tthis.list.pop();\n\t}\n}\n\nSnakeTest_Snake.SNAKE_ID = 0;\n// CONCATENATED MODULE: ./src/main.js\n\n\n\nfunction main() {\n\tlet canvas = document.getElementById("mycanvas"),\n\t    ctx = canvas.getContext("2d");\n\n\tcanvas.addEventListener("mousedown", e => {\n\t\tif (GameRenderer_GameRenderer.Instance == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mouseX = e.offsetX,\n\t\t      mouseY = e.offsetY;\n\t\tconst margin = 50;\n\n\t\tif (mouseX < margin) {\n\t\t\tGameRenderer_GameRenderer.Instance.movDirX = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_LEFT;\n\t\t} else if (mouseX > canvas.width - margin) {\n\t\t\tGameRenderer_GameRenderer.Instance.movDirX = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_RIGHT;\n\t\t}\n\n\t\tif (mouseY < margin) {\n\t\t\tGameRenderer_GameRenderer.Instance.movDirY = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_TOP;\n\t\t} else if (mouseY > canvas.height - margin) {\n\t\t\tGameRenderer_GameRenderer.Instance.movDirY = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_BOTTOM;\n\t\t}\n\t});\n\n\tcanvas.addEventListener("mouseup", e => {\n\t\tif (GameRenderer_GameRenderer.Instance == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tGameRenderer_GameRenderer.Instance.movDirX = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_NONE;\n\t\tGameRenderer_GameRenderer.Instance.movDirY = GameRenderer_GameRenderer.VIEWPORT_MOV_DIR_NONE;\n\t});\n\n\tconnectServer();\n\n\tlet renderer = new GameRenderer_GameRenderer(ctx, canvas.width, canvas.height);\n\n\t// test\n\t// let test = new SnakeTest();\n\n\t// for (let i = 0; i < 10; i++) {\n\t// \ttest.addSnake();\n\t// }\n\n\trequestAnimationFrame(update);\n}\n\nfunction connectServer() {\n\t// const socket = io.connect("http://as.chinacloudsites.cn");\n\tconst socket = io.connect("http://127.0.0.1:3000");\n\tsocket.on("connect", function (data) {\n\t\tconsole.log("Socket Connected");\n\t});\n\tsocket.on("judged", function (data) {\n\t\tconsole.log(data);\n\t\tconsole.log("Judged Message");\n\n\t\tGameRenderer_GameRenderer.Instance.updateBoardData(data.map);\n\t});\n}\n\nfunction update() {\n\tif (SnakeTest_SnakeTest.Instance != null) {\n\t\tSnakeTest_SnakeTest.Instance.run();\n\n\t\tGameRenderer_GameRenderer.Instance.updateBoardData(SnakeTest_SnakeTest.Instance.map);\n\t}\n\n\t// console.log(GameRenderer.Instance.boardData);\n\n\tGameRenderer_GameRenderer.Instance.update();\n\n\trequestAnimationFrame(update);\n}\n\nwindow.addEventListener("load", () => {\n\tmain();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);